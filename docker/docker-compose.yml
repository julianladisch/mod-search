version: "3.8"

services:
  mod-search:
    container_name: mod-search
    image: dev.folio/mod-search
    build:
      context: ../
      dockerfile: Dockerfile
    networks:
      - mod-search-local
    ports:
      - "${APP_PORT}:8081"
      - "${DEBUG_PORT}:${DEBUG_PORT}"
    depends_on:
      - api-mock
      - opensearch-node1
      - opensearch-node2
      - kafka
      - postgres
    environment:
      ELASTICSEARCH_URL: http://opensearch:9200
      DB_HOST: postgres
      JAVA_OPTIONS: -Xmx120m -Xms120m
      JAVA_TOOL_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:${DEBUG_PORT}
      okapi.url: ${OKAPI_URL}

  api-mock:
    image: wiremock/wiremock:2.32.0
    container_name: api-mock
    networks:
      - mod-search-local
    command:
      - "--verbose"
    ports:
      - "9130:8080"
    volumes:
      - ../src/test/resources/mappings:/home/wiremock/mappings

  opensearch-node1:
    image: opensearchproject/opensearch:2.5.0  # make sure that the same version is used for node1, node2, dashboards
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node1 # Name the node that will run in this container
      - discovery.seed_hosts=opensearch-node1,opensearch-node2 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2 # Nodes eligibile to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - "DISABLE_INSTALL_DEMO_CONFIG=true" # Prevents execution of bundled demo script which installs demo certificates and security configurations to OpenSearch
      - "DISABLE_SECURITY_PLUGIN=true" # Disables security plugin
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    networks:
      - mod-search-local

  opensearch-node2:
    image: opensearchproject/opensearch:2.5.0
    container_name: opensearch-node2
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node2 # Name the node that will run in this container
      - discovery.seed_hosts=opensearch-node1,opensearch-node2 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2 # Nodes eligibile to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - "DISABLE_INSTALL_DEMO_CONFIG=true" # Prevents execution of bundled demo script which installs demo certificates and security configurations to OpenSearch
      - "DISABLE_SECURITY_PLUGIN=true" # Disables security plugin
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-data2:/usr/share/opensearch/data # Creates volume called opensearch-data2 and mounts it to the container
    networks:
      - mod-search-local

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.5.0 # Make sure the version of opensearch-dashboards matches the version of opensearch installed on other nodes
    container_name: opensearch-dashboards
    ports:
      - 5601:5601 # Map host port 5601 to container port 5601
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch-node1:9200","http://opensearch-node2:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
      DISABLE_INSTALL_DEMO_CONFIG: "true"
      DISABLE_SECURITY_DASHBOARDS_PLUGIN: "true"
    networks:
      - mod-search-local

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:3.4.6
    networks:
      - mod-search-local
    ports:
      - "2181:2181"

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:2.13-2.8.1
    networks:
      - mod-search-local
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:29092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://localhost:29092
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_MESSAGE_MAX_BYTES: 1000000
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"

  kafka-ui:
    container_name: kafka-ui-quick-marc
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    depends_on:
      - zookeeper
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_JMXPORT: 9997
    networks:
      - mod-search-local

  postgres:
    container_name: postgres
    image: postgres:12-alpine
    networks:
      - mod-search-local
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: okapi_modules

networks:
  mod-search-local:
    driver: bridge

volumes:
  opensearch-data1: { }
  opensearch-data2: { }
  db-data: { }
